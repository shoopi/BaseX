/**
 * This class is generated by jOOQ
 */
package main.java.nl.tue.ieis.is.basex.entities.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import main.java.nl.tue.ieis.is.basex.entities.jooq.BasexDatabase;
import main.java.nl.tue.ieis.is.basex.entities.jooq.Keys;
import main.java.nl.tue.ieis.is.basex.entities.jooq.tables.records.CpActivityRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CpActivity extends TableImpl<CpActivityRecord> {

    private static final long serialVersionUID = -365650379;

    /**
     * The reference instance of <code>basex_database.cp_activity</code>
     */
    public static final CpActivity CP_ACTIVITY = new CpActivity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CpActivityRecord> getRecordType() {
        return CpActivityRecord.class;
    }

    /**
     * The column <code>basex_database.cp_activity.CP_ACTIVITY_ID</code>.
     */
    public final TableField<CpActivityRecord, String> CP_ACTIVITY_ID = createField("CP_ACTIVITY_ID", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>basex_database.cp_activity.NAME</code>.
     */
    public final TableField<CpActivityRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(159).nullable(false), this, "");

    /**
     * The column <code>basex_database.cp_activity.BM_ACTOR_ID</code>.
     */
    public final TableField<CpActivityRecord, String> BM_ACTOR_ID = createField("BM_ACTOR_ID", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * Create a <code>basex_database.cp_activity</code> table reference
     */
    public CpActivity() {
        this("cp_activity", null);
    }

    /**
     * Create an aliased <code>basex_database.cp_activity</code> table reference
     */
    public CpActivity(String alias) {
        this(alias, CP_ACTIVITY);
    }

    private CpActivity(String alias, Table<CpActivityRecord> aliased) {
        this(alias, aliased, null);
    }

    private CpActivity(String alias, Table<CpActivityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BasexDatabase.BASEX_DATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CpActivityRecord> getPrimaryKey() {
        return Keys.KEY_CP_ACTIVITY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CpActivityRecord>> getKeys() {
        return Arrays.<UniqueKey<CpActivityRecord>>asList(Keys.KEY_CP_ACTIVITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CpActivityRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CpActivityRecord, ?>>asList(Keys.FK_COPRODUCTION_BM_ACTOR1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CpActivity as(String alias) {
        return new CpActivity(alias, this);
    }

    /**
     * Rename this table
     */
    public CpActivity rename(String name) {
        return new CpActivity(name, null);
    }
}
