/**
 * This class is generated by jOOQ
 */
package main.java.nl.tue.ieis.is.basex.entities.jooq.tables.records;


import javax.annotation.Generated;

import main.java.nl.tue.ieis.is.basex.entities.jooq.tables.CpActivity;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CpActivityRecord extends UpdatableRecordImpl<CpActivityRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = -136280717;

    /**
     * Setter for <code>basex_database.cp_activity.CP_ACTIVITY_ID</code>.
     */
    public void setCpActivityId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>basex_database.cp_activity.CP_ACTIVITY_ID</code>.
     */
    public String getCpActivityId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>basex_database.cp_activity.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>basex_database.cp_activity.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>basex_database.cp_activity.BM_ACTOR_ID</code>.
     */
    public void setBmActorId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>basex_database.cp_activity.BM_ACTOR_ID</code>.
     */
    public String getBmActorId() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return CpActivity.CP_ACTIVITY.CP_ACTIVITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return CpActivity.CP_ACTIVITY.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return CpActivity.CP_ACTIVITY.BM_ACTOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getCpActivityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getBmActorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CpActivityRecord value1(String value) {
        setCpActivityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CpActivityRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CpActivityRecord value3(String value) {
        setBmActorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CpActivityRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CpActivityRecord
     */
    public CpActivityRecord() {
        super(CpActivity.CP_ACTIVITY);
    }

    /**
     * Create a detached, initialised CpActivityRecord
     */
    public CpActivityRecord(String cpActivityId, String name, String bmActorId) {
        super(CpActivity.CP_ACTIVITY);

        set(0, cpActivityId);
        set(1, name);
        set(2, bmActorId);
    }
}
