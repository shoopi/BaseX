/**
 * This class is generated by jOOQ
 */
package main.java.nl.tue.ieis.is.basex.entities.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import main.java.nl.tue.ieis.is.basex.entities.jooq.BasexDatabase;
import main.java.nl.tue.ieis.is.basex.entities.jooq.Keys;
import main.java.nl.tue.ieis.is.basex.entities.jooq.tables.records.BusinessModelRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusinessModel extends TableImpl<BusinessModelRecord> {

    private static final long serialVersionUID = 1747356001;

    /**
     * The reference instance of <code>basex_database.business_model</code>
     */
    public static final BusinessModel BUSINESS_MODEL = new BusinessModel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BusinessModelRecord> getRecordType() {
        return BusinessModelRecord.class;
    }

    /**
     * The column <code>basex_database.business_model.BM_ID</code>.
     */
    public final TableField<BusinessModelRecord, String> BM_ID = createField("BM_ID", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>basex_database.business_model.VALUE_IN_USE</code>.
     */
    public final TableField<BusinessModelRecord, String> VALUE_IN_USE = createField("VALUE_IN_USE", org.jooq.impl.SQLDataType.VARCHAR.length(150).nullable(false), this, "");

    /**
     * The column <code>basex_database.business_model.DESC</code>.
     */
    public final TableField<BusinessModelRecord, String> DESC = createField("DESC", org.jooq.impl.SQLDataType.VARCHAR.length(5000), this, "");

    /**
     * The column <code>basex_database.business_model.STRATEGY_ID</code>.
     */
    public final TableField<BusinessModelRecord, String> STRATEGY_ID = createField("STRATEGY_ID", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>basex_database.business_model.VERSION</code>.
     */
    public final TableField<BusinessModelRecord, Double> VERSION = createField("VERSION", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    /**
     * The column <code>basex_database.business_model.IMAGE</code>.
     */
    public final TableField<BusinessModelRecord, byte[]> IMAGE = createField("IMAGE", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>basex_database.business_model.CREATED_DATE</code>.
     */
    public final TableField<BusinessModelRecord, Timestamp> CREATED_DATE = createField("CREATED_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>basex_database.business_model.LAST_EDITED_TIME</code>.
     */
    public final TableField<BusinessModelRecord, Timestamp> LAST_EDITED_TIME = createField("LAST_EDITED_TIME", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>basex_database.business_model.CREATED_BY</code>.
     */
    public final TableField<BusinessModelRecord, String> CREATED_BY = createField("CREATED_BY", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>basex_database.business_model.LAST_EDITED_BY</code>.
     */
    public final TableField<BusinessModelRecord, String> LAST_EDITED_BY = createField("LAST_EDITED_BY", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * Create a <code>basex_database.business_model</code> table reference
     */
    public BusinessModel() {
        this("business_model", null);
    }

    /**
     * Create an aliased <code>basex_database.business_model</code> table reference
     */
    public BusinessModel(String alias) {
        this(alias, BUSINESS_MODEL);
    }

    private BusinessModel(String alias, Table<BusinessModelRecord> aliased) {
        this(alias, aliased, null);
    }

    private BusinessModel(String alias, Table<BusinessModelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BasexDatabase.BASEX_DATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BusinessModelRecord> getPrimaryKey() {
        return Keys.KEY_BUSINESS_MODEL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BusinessModelRecord>> getKeys() {
        return Arrays.<UniqueKey<BusinessModelRecord>>asList(Keys.KEY_BUSINESS_MODEL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BusinessModelRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BusinessModelRecord, ?>>asList(Keys.FK_BUSINESS_MODEL_PROJECT, Keys.FK_BUSINESS_MODEL_USER1, Keys.FK_BUSINESS_MODEL_USER2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BusinessModel as(String alias) {
        return new BusinessModel(alias, this);
    }

    /**
     * Rename this table
     */
    public BusinessModel rename(String name) {
        return new BusinessModel(name, null);
    }
}
