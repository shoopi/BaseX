/**
 * This class is generated by jOOQ
 */
package main.java.nl.tue.ieis.is.basex.entities.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import main.java.nl.tue.ieis.is.basex.entities.jooq.BasexDatabase;
import main.java.nl.tue.ieis.is.basex.entities.jooq.Keys;
import main.java.nl.tue.ieis.is.basex.entities.jooq.tables.records.UserHasStrategyRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserHasStrategy extends TableImpl<UserHasStrategyRecord> {

    private static final long serialVersionUID = -1575315795;

    /**
     * The reference instance of <code>basex_database.user_has_strategy</code>
     */
    public static final UserHasStrategy USER_HAS_STRATEGY = new UserHasStrategy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserHasStrategyRecord> getRecordType() {
        return UserHasStrategyRecord.class;
    }

    /**
     * The column <code>basex_database.user_has_strategy.USER_USER_ID</code>.
     */
    public final TableField<UserHasStrategyRecord, String> USER_USER_ID = createField("USER_USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>basex_database.user_has_strategy.STRATEGY_STRATEGY_ID</code>.
     */
    public final TableField<UserHasStrategyRecord, String> STRATEGY_STRATEGY_ID = createField("STRATEGY_STRATEGY_ID", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * Create a <code>basex_database.user_has_strategy</code> table reference
     */
    public UserHasStrategy() {
        this("user_has_strategy", null);
    }

    /**
     * Create an aliased <code>basex_database.user_has_strategy</code> table reference
     */
    public UserHasStrategy(String alias) {
        this(alias, USER_HAS_STRATEGY);
    }

    private UserHasStrategy(String alias, Table<UserHasStrategyRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserHasStrategy(String alias, Table<UserHasStrategyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BasexDatabase.BASEX_DATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserHasStrategyRecord> getPrimaryKey() {
        return Keys.KEY_USER_HAS_STRATEGY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserHasStrategyRecord>> getKeys() {
        return Arrays.<UniqueKey<UserHasStrategyRecord>>asList(Keys.KEY_USER_HAS_STRATEGY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserHasStrategyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserHasStrategyRecord, ?>>asList(Keys.FK_USER_HAS_STRATEGY_USER1, Keys.FK_USER_HAS_STRATEGY_STRATEGY1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserHasStrategy as(String alias) {
        return new UserHasStrategy(alias, this);
    }

    /**
     * Rename this table
     */
    public UserHasStrategy rename(String name) {
        return new UserHasStrategy(name, null);
    }
}
