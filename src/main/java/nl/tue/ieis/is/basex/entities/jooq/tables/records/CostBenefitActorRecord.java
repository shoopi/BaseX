/**
 * This class is generated by jOOQ
 */
package main.java.nl.tue.ieis.is.basex.entities.jooq.tables.records;


import javax.annotation.Generated;

import main.java.nl.tue.ieis.is.basex.entities.jooq.tables.CostBenefitActor;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CostBenefitActorRecord extends UpdatableRecordImpl<CostBenefitActorRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = -86269673;

    /**
     * Setter for <code>basex_database.cost_benefit_actor.CB_ACTOR_ID</code>.
     */
    public void setCbActorId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>basex_database.cost_benefit_actor.CB_ACTOR_ID</code>.
     */
    public String getCbActorId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>basex_database.cost_benefit_actor.BM_ACTOR_ID</code>.
     */
    public void setBmActorId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>basex_database.cost_benefit_actor.BM_ACTOR_ID</code>.
     */
    public String getBmActorId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>basex_database.cost_benefit_actor.CB_ID</code>.
     */
    public void setCbId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>basex_database.cost_benefit_actor.CB_ID</code>.
     */
    public String getCbId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>basex_database.cost_benefit_actor.COST_OR_BENEFIT</code>.
     */
    public void setCostOrBenefit(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>basex_database.cost_benefit_actor.COST_OR_BENEFIT</code>.
     */
    public String getCostOrBenefit() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return CostBenefitActor.COST_BENEFIT_ACTOR.CB_ACTOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return CostBenefitActor.COST_BENEFIT_ACTOR.BM_ACTOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return CostBenefitActor.COST_BENEFIT_ACTOR.CB_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return CostBenefitActor.COST_BENEFIT_ACTOR.COST_OR_BENEFIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getCbActorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getBmActorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCbId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCostOrBenefit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CostBenefitActorRecord value1(String value) {
        setCbActorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CostBenefitActorRecord value2(String value) {
        setBmActorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CostBenefitActorRecord value3(String value) {
        setCbId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CostBenefitActorRecord value4(String value) {
        setCostOrBenefit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CostBenefitActorRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CostBenefitActorRecord
     */
    public CostBenefitActorRecord() {
        super(CostBenefitActor.COST_BENEFIT_ACTOR);
    }

    /**
     * Create a detached, initialised CostBenefitActorRecord
     */
    public CostBenefitActorRecord(String cbActorId, String bmActorId, String cbId, String costOrBenefit) {
        super(CostBenefitActor.COST_BENEFIT_ACTOR);

        set(0, cbActorId);
        set(1, bmActorId);
        set(2, cbId);
        set(3, costOrBenefit);
    }
}
